function replace_char(pos, str, r)
  return str:sub(1, pos-1) .. r .. str:sub(pos+1)
end

function setPixel(x,y,color)
  img[y] = replace_char(x,img[y],color)
end

function writeLine(x1,y1,x2,y2,color)
  if x1 == x2 then
    for i=math.min(y1,y2),math.max(y1,y2) do
      setPixel(x1,i,color)
    end
    return
  end
  local slope = (y2-y1)/(x2-x1)
  local length = math.sqrt(math.pow(x2-x1,2)+math.pow(y2-y1,2))
  for i=0,x2-x1,(x2-x1)/(3*length) do
    setPixel(math.floor(x1+i+0.5),math.floor(y1+i*slope+0.5),color)
  end
end

function writeSector(cx, cy, ri, rf, ti, tf, color)
  for th=ti,tf,1/1000 do
    writeLine(math.floor(cx+ri*math.cos(th)+0.5),math.floor(cy-ri*math.sin(th)/1.5+0.5),math.floor(cx+rf*math.cos(th)+0.5),math.floor(cy-rf*math.sin(th)/1.5+0.5),color)
  end
end

args = {...}

local r1 = args[1]
local r2 = args[2]
local rot = 2*math.pi/args[3]
local fn = args[4]

local CX = r2+1
local CY = math.ceil(r2/1.5)

local th = 0

local file = fs.open(fn, "w")

while th < 2*math.pi do
  img = {}

  for i=1,math.ceil(2*r2/1.5) do
    table.insert(img,string.rep(" ",2*r2))
  end

  writeSector(CX,CY,0,r1,0,2*math.pi,"4")
    
  writeSector(CX,CY,r1+1,r2,th,th+2*math.pi/13,"5")

  local c = "e"
  for i=1,12 do
    writeSector(CX,CY,r1+1,r2,th+i*2*math.pi/13,th+(i+1)*2*math.pi/13,c)
    if c == "e" then c = "f"
    else c = "e" end
  end

  th = th+rot
  for i,l in ipairs(img) do file.writeLine(l) end
  os.sleep(0.1)
end
file.close()
