local monitor = peripheral.wrap("right")
local w, h = monitor.getSize()
local drive = peripheral.wrap("top")

local currency = "minecraft:diamond"

function resetScreen(m)
  local oldTerm = term.redirect(m)
  paintutils.drawFilledBox(1,1,w,h,colors.black)
  term.setCursorPos(1,1)
  term.redirect(oldTerm)
end
 
function awaitCard()
  function awaitCardScreen()
    resetScreen(monitor)
    centerText("Insert",9,monitor)
    monitor.setCursorPos(1,2)
    centerText("Card",10,monitor)
  end
  
  redstone.setOutput("back", true)
  awaitCardScreen()
  
  while true do
    turtle.suckDown()
    local itm = turtle.getItemDetail()
    if itm then
      if (itm.name == "ComputerCraft:disk") then
        turtle.dropUp()
        resetScreen(monitor)
        menu()
        
        redstone.setOutput("back", true)
      else
        redstone.setOutput("back", false)
        turtle.drop()
        os.sleep(1.5)
        
        resetScreen(monitor)
        centerText("Not a Card",9,monitor)
        centerText("Click to Proceed",10,monitor)
        
        event,side,posX,posY = os.pullEvent("monitor_touch")
        redstone.setOutput("back", true)
      end
    else
      awaitCardScreen()
    end
  end
end
 
function menu()
  function drawMenu()
    resetScreen(monitor)
    local oldTerm = term.redirect(monitor)
    
    monitor.setBackgroundColor(colors.black)
    
    local file = fs.open("/disk/val", "r")
    local cardVal = getCardValue()
    
    centerText("Cashier!",4,monitor)
    centerText("$"..tostring(cardVal),6,monitor)
    paintutils.drawFilledBox(2,8,17,10,colors.blue)
    centerText("Load Money",9,monitor)
    paintutils.drawFilledBox(2,12,17,14,colors.green)
    centerText("Cash Out",13,monitor)
    paintutils.drawFilledBox(2,16,17,18,colors.red)
    centerText("Done",17,monitor)
    
    term.redirect(oldTerm)
  end
  drawMenu()
  redstone.setOutput("back", false)
  
  while true do
    event,side,xPos,yPos = os.pullEvent("monitor_touch")
    if (8 <= yPos and yPos <= 10) then
      deposit()
      drawMenu()
      redstone.setOutput("back", false)
    elseif (12 <= yPos and yPos <= 14) then
      cashOut()
      drawMenu()
    elseif (16 <= yPos and yPos <= 18) then
      turtle.suckUp()
      turtle.drop()
      resetScreen(monitor)
      centerText("Thanks",9,monitor)
      os.sleep(4)
      return -- back to awaitCard
    end
  end
end
 
function deposit()
  function drawDeposit()
    resetScreen(monitor)
    local oldTerm = term.redirect(monitor)
    
    monitor.setBackgroundColor(colors.black)
    
    centerText("Insert",4,monitor)
    centerText("Diamonds",5,monitor)
    paintutils.drawFilledBox(2,12,17,14,colors.green)
    centerText("Done",13,monitor)
    
    term.redirect(oldTerm)
  end
 
  local d = 0
  local clicked = false
  
  function handleDiamond(dmnd)
    if (dmnd.name == currency) then
      d = d + dmnd.count
      turtle.turnLeft()
      turtle.drop()
      turtle.turnRight()
    else
      turtle.drop()
    end
  end
 
  function collectDiamonds()
    while true do
      if clicked then
        resetScreen(monitor)
        centerText("Counting",9,monitor)
        os.sleep(2)
        turtle.suckDown()
        local itm = turtle.getItemDetail()
        while itm do
          handleDiamond(itm)
          turtle.suckDown()
          itm = turtle.getItemDetail()
        end
        return
      end
      turtle.suckDown()
      local itm = turtle.getItemDetail()
      if itm then
        handleDiamond(itm)
      end
    end
  end
 
  function awaitDone()
    while true do
      event,side,posX,posY = os.pullEvent("monitor_touch")
      if (12 <= posY and posY <= 14) then
        clicked = true
        return
      end
    end
  end
 
  drawDeposit()
  redstone.setOutput("back", true)
  
  parallel.waitForAll(collectDiamonds, awaitDone)
 
  updateCardValue(d)
  
  return -- back to menu
end

function cashOut()
  function drawCashOut()
    resetScreen(monitor)
    local oldTerm = term.redirect(monitor)
    centerText("Cash Out",4,monitor)
    paintutils.drawFilledBox(2,8,17,10,colors.green)
    centerText("All",9,monitor)
    paintutils.drawFilledBox(2,12,17,14,colors.yellow)
    centerText("Half",13,monitor)
    paintutils.drawFilledBox(2,16,17,18,colors.red)
    centerText("Cancel",17,monitor)
    term.redirect(oldTerm)
  end
  
  drawCashOut()
  
  while true do
    event,side,xPos,yPos = os.pullEvent("monitor_touch")
    if (8 <= yPos and yPos <= 10) then
      local bal = getCardValue()
      resetScreen(monitor)
      centerText("Dispensing",9,monitor)
      updateCardValue(-bal)
      local scammed = withdraw(math.floor(bal*.95))
      updateCardValue(scammed)
      os.sleep(1)
      return -- back to menu
    elseif (12 <= yPos and yPos <= 14) then
      local bal = math.floor(getCardValue()/2)
      resetScreen(monitor)
      centerText("Dispensing",9,monitor)
      updateCardValue(-bal)
      local scammed = withdraw(math.floor(bal*.95))
      updateCardValue(scammed)
      os.sleep(1)
      return -- back to menu
    elseif (16 <= yPos and yPos <= 18) then
      return -- back to menu
    end
  end
end

function withdraw(n)
  local scammed = 0
  while (n >= 64) do
    turtle.turnLeft()
    for p = 1, math.min(16, math.floor(n/64)) do
      turtle.select(p)
      turtle.suck()
      if (turtle.getItemCount() == 0) then
        scammed = scammed + 64
      end
      n = n - 64
    end
    turtle.turnRight()
    for p = 1, 16 do
      turtle.select(p)
      turtle.drop()
    end
  end
  if scammed == 0 then
    turtle.select(1)
    turtle.turnLeft()
    turtle.suck(n)
    scammed = scammed + n - turtle.getItemCount()
    turtle.turnRight()
    turtle.drop()
  else
    scammed = scammed + n
  end
  return scammed
end

function updateCardValue(newd)
  local oldVal = getCardValue()
  local file = fs.open("/disk/val","w")
  file.write(tostring(oldVal + newd))
  file.close()
end
 
function getCardValue()
  local file = fs.open("/disk/val","r")
  if file then
    local cardVal = tonumber(file.readLine())
    file.close()
    return cardVal
  else
    return 0
  end  
end
 
function centerText(text, y, m)
  local mw,mh = m.getSize()
  m.setCursorPos(math.floor((mw/2)-(text:len()/2)+1),y)
  m.write(text)
end
 
awaitCard()
